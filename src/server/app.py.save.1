from flask import Flask
from flask import jsonify
from flask import json



#Oracle
import cx_Oracle

#json request
from flask import request

app=Flask(__name__)

#DB connect
con=cx_Oracle.connect('scott/12345678@oracle11gr2.cdubaygxhxxb.ap-northeast-2.rds.amazonaws.com:1521/orcl')
db=con.cursor()

#class
class Node(object):
	def __init__(self,name,direction,id):
		self.name=name
		self.direction=direction
		self.id=id


#route
@app.route('/')
def hello():
	return 'Welcome'

@app.route('/json')
def json_test():
	data={'hello' : 'world', 'number':3}
	resp=jsonify(data)	
	return resp

@app.route('/select')
def select():
	#con=cx_Oracle.connect('scott/12345678@oracle11gr2.cdubaygxhxxb.ap-northeast-2.rds.amazonaws.com:1521/orcl')
	#db=con.cursor()

	db.execute('SELECT * FROM NODE')
	records=db.fetchall()
	datas=[]
	data={}
	for record in records:
		data={'node_id':record[0],'node_type':record[1],'node_name':record[2],'node_longitude':record[3],'node_latitude':record[4],'node_neighbors':record[5]}	
		datas.append(data)
		data={}

	#global dataAll

	#first case to retrieve db data
	#for record in db:
		#print(record)
		#print(record[0])
		#print(record[1])
		
		#make json
		#data={'name':record[0],'direction':record[1],'id':record[2]}
		
		#dataAll=json.dumps(data)
		
		

	resp=jsonify(datas)
		
	

	

	#db.close()
	#con.close()	
	
	#dataFinal=json.dumps({'Nodes':data})

	#print(dataFinal)

	return resp

#Insert example
@app.route('/insert', methods=['POST'])
def insert():
		
	request_json=request.get_json()
	print(request_json)

	#datas=[]
	#data={}

	for firstkey, big_list in request_json.items():
		print(firstkey)
		if firstkey==
"Node"
			for pair in big_list:
				for nextkey, small_list in pair.items():
					print (pair[nextkey])
				
			



	#for node in request_json:
		#print(node)
		#print(node[0])
		#print(node[1])


	rows=[('2','CORNER','HOME',5,10,'1/2/3'),('3','CORNER','HOME',5,10,'2/3/4')]
	db.bindarraysize=2
	db.setinputsizes(20,20,20,int,int,20)
	db.executemany("insert into node(node_id,node_type,node_name,node_longitude,node_latitude,node_neighbors) values (:1,:2,:3,:4,:5,:6)",rows)
	con.commit()
	
	#db.close()
	#con.close()

	return jsonify(request_json)

@app.route('/update')
def update():
	
	
	return 'success'

if __name__=='__main__':
	app.run(host='0.0.0.0',port='5000',debug='True')
